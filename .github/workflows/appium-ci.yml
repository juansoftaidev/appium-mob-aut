# This workflow tests the Maven profiles in the SDK branch for Java 22

name: Java SDK Test Workflow for Maven on workflow_dispatch

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'The full commit id to build'
        required: true

jobs:
  comment-run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        java: ['22']  # Only target Java 22
        os: ['macos-latest', 'windows-latest', 'ubuntu-latest']
    name: Cucumber Appium Repo Java ${{ matrix.java }} - ${{ matrix.os }} Sample
    env:
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_sha }}

      - name: Create status check in progress
        uses: actions/github-script@v3
        id: status-check-in-progress
        env:
          job_name: Cucumber Appium Repo Java ${{ matrix.java }} - ${{ matrix.os }} Sample
          commit_sha: ${{ github.event.inputs.commit_sha }}
        with:
          github-token: ${{ github.token }}
          script: |
            const result = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: process.env.job_name,
              head_sha: process.env.commit_sha,
              status: 'in_progress'
            }).catch((err) => ({status: err.status, response: err.response}));
            console.log(`The status-check response: ${result.status} Response: ${JSON.stringify(result.response)}`);
            if (result.status !== 201) {
              console.log('Failed to create check run');
            }

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Run Android Maven tests
        run: |
          cd android
          mvn compile
          mvn test
          mvn test -P sample-local-test -D"browserstack.app"="./LocalSample.apk"
          mvn test -P sample-test

      - name: Run iOS Maven tests
        run: |
          cd ios
          mvn compile
          mvn test
          mvn test -P sample-local-test -D"browserstack.app"="./LocalSample.ipa"
          mvn test -P sample-test

      - name: Create status check completed
        if: always()
        uses: actions/github-script@v3
        id: status-check-completed
        env:
          conclusion: ${{ job.status }}
          job_name: Cucumber Appium Repo Java ${{ matrix.java }} - ${{ matrix.os }} Sample
          commit_sha: ${{ github.event.inputs.commit_sha }}
        with:
          github-token: ${{ github.token }}
          script: |
            const result = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: process.env.job_name,
              head_sha: process.env.commit_sha,
              status: 'completed',
              conclusion: process.env.conclusion
            }).catch((err) => ({status: err.status, response: err.response}));
            console.log(`The status-check response: ${result.status} Response: ${JSON.stringify(result.response)}`);
            if (result.status !== 201) {
              console.log('Failed to create check run');
            }
